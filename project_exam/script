#!/bin/bash
source /tmp/.env
#source .env

#function for installing packages
function install(){
        #echo -e "\nEnter a list of packages to be installed (separated by spaces)\n"
        #read -r -a packages
        sudo apt install $1 -y
}


#function for setting up a new user on the mysql database
function createMysqlUser(){
    # Connect to MySQL and create the new user
       
        existing_user=$(mysql -u root -p$1 -e "SELECT user FROM mysql.user WHERE user = '$2';" | grep -o "$2")
        
        if [ "$existing_user" == "$2" ]; then
                echo "User '$2' already exists in MySQL. Not creating the user."
        else
                #create a new user
                sudo mysql -u root -p$1 -e "CREATE USER '$2'@'localhost' IDENTIFIED BY '$3';"

                existing_user=$(mysql -u root -p$1 -e "SELECT user FROM mysql.user WHERE user = '$2';" | grep -o "$2")

                if [ "$existing_user" == "$2" ]; then
                        # Grant all privileges to the new user
                        sudo mysql -u root -p$1 -e "GRANT ALL PRIVILEGES ON *.* TO '$2'@'localhost' WITH GRANT OPTION;"

                        # Flush privileges to apply changes
                        sudo mysql -u root -p$1 -e "FLUSH PRIVILEGES;"

                        echo "New MySQL user '$2' created with all privileges."
                else
                        echo "FAILED: User not create"
                fi
        fi
    
}

function startApacheMysql(){
        sudo systemctl start apache2
        sudo systemctl start mysql
}

#function for cloning the php application from git
function cloneFromGit(){
        if [ -d "$2" ]; then
                # Navigate to the target directory
                cd "$2" || exit

                # Fetch updates from the remote repository
                git fetch origin

                # Check if the local repository is up to date
                if git diff --quiet HEAD FETCH_HEAD; then
                        echo "Repository is up to date."
                else
                        echo "Repository is not up to date."
                        # Pull changes from the remote repository
                        git pull
                fi
        else
                # Clone the repository into the target directory
                git clone "$1" "$2"
                if [ $? -eq 0 ]; then
                        echo "Repository cloned successfully into $2"
                else
                        echo "Failed to clone repository"
                fi
        fi

        
}

function moveToApacheFolder(){

        if [ -d "$2" ]; then
                # Move the contents of the source directory to the target directory
                sudo rm -rf $2
                sudo mv $1 $2
        
                if [ $? -eq 0 ]; then
                        echo "Directory moved successfully."
                else
                        echo "Failed to move directory."
                fi
        else
                sudo mv $1 $2
                if [ $? -eq 0 ]; then
                        echo "Directory moved successfully."
                else
                        echo "Failed to move directory."
                fi

        fi
}

#update server
echo -e "*********======== About to update server =========********\n"

sudo apt update #update the server

#list of packages to be installed

echo -e "*********======== Install packages =========********\n"
packages=("apache2" "git" "mysql-server" "composer" "php8.2")

#looping over the list of packages to be installed
for package in "${packages[@]}"; do
    echo -e "\n==========******** About to install ${package} ********========= \n"  
    install ${package}
done

#setting up mysql database for a new user
echo -e "\n*********======== Setting up mysql server =========********\n"

createMysqlUser  $MYSQL_ROOT_PASSWORD $MYSQL_NEW_USERAME $MYSQL_USER_PASSWORD

#start mysql and apache server
echo -e "\n*********======== Start Mysql and Apache2 server =========********\n"
startApacheMysql

#clone laravel web application
echo -e "\n*********======== Clone repo from git =========********\n"
gitUrl="https://github.com/laravel/laravel"
target_directory="/tmp/laravel"
cloneFromGit $gitUrl $target_directory

#move the clone laravel app to /var/www/
echo -e "\n*********======== move app to apache folder =========********\n"
www_path=/var/www/laravel
cloned_path=/tmp/laravel
moveToApacheFolder $cloned_path $www_path


#configure server for hosting laravel

echo -e "\n*********======== Setting server to host laravel application =========********\n"

echo -e "\n*********======== Install composer php dependencies =====********\n"

packages=("php8.2-curl" "php8.2-mbstring" "php8.2-xml" "zip" "unzip" "php8.2-dom" "php8.2-mysql")

#looping over the list of packages to be installed
for package in "${packages[@]}"; do
    echo -e "\n==========******** About to install ${package} ********========= \n"  
    install ${package}
done

#cd to the directory and install laravel
cd  /var/www/laravel/

echo -e "\n==========******** Installing composer ********========= \n"  
composer install --optimize-autoloader --no-dev

echo -e "\n==========******* Create .env file ********========= \n" 
touch .env

echo -e "\n==========******** Copy .env.example to .env file ********========= \n" 
cp .env.example .env

#update .env file
echo -e "\n==========******** Update .env File ********========= \n" 
sudo sed -i "s/# DB_DATABASE=.*/DB_DATABASE=$LARAVEL_DATABASE_NAME/" /var/www/laravel/.env
sudo sed -i "s/# DB_HOST=.*/DB_HOST=$DB_HOST/" /var/www/laravel/.env
sudo sed -i "s/# DB_USERNAME=.*/DB_USERNAME=$DB_USERNAME/" /var/www/laravel/.env
sudo sed -i "s/# DB_PASSWORD=.*/DB_PASSWORD=$DB_PASSWORD/" /var/www/laravel/.env
sudo sed -i "s/DB_CONNECTION=.*/DB_CONNECTION=$LARAVEL_DATABASE/" /var/www/laravel/.env
sudo sed -i "s/# DB_PORT=.*/DB_PORT=$DB_PORT/" /var/www/laravel/.env

#create database
echo -e "\n==========******** Create database ********========= \n" 
mysql -u $MYSQL_NEW_USERAME -p$MYSQL_USER_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $LARAVEL_DATABASE_NAME;"

#run important artisan commands
echo -e "\n==========******** genarate app key and migrate to database ********========= \n" 
sudo php artisan key:generate
sudo php artisan migrate


#create and write into laravel.conf file for laravel
echo -e "\n==========******** create and write into laravel.conf file for laravel ********========= \n" 
sudo mkdir /etc/apache2/sites-available/
sudo tee /etc/apache2/sites-available/laravel.conf << EOF
<VirtualHost *:80>
   ServerName temmy.dev
   ServerAdmin webmaster@temmy.dev
   DocumentRoot /var/www/laravel/public

   <Directory /var/www/laravel/public>
       AllowOverride All
       Options Indexes FollowSymLinks Multiviews
       Require all granted
   </Directory>
   ErrorLog \${APACHE_LOG_DIR}/error.log
   CustomLog \${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
EOF

#change own to www-data
echo -e "\n==========******** Change own to www-data ********========= \n" 
sudo chown -R www-data /var/www/laravel/storage
sudo chown -R www-data /var/www/laravel/bootstrap/cache


#activate
echo -e "\n==========******** Activate the laravel site and disable the default ********========= \n" 
sudo a2enmod rewrite
sudo a2dissite 000-default.conf
sudo a2ensite laravel.conf
sudo systemctl restart apache2

